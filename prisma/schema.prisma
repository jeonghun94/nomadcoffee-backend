generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  name String
  location String
  password String 
  avatarURL String?
  githubUserName String?
  photos    Photo[]
  coffshops CoffeeShop[]
  likes     Like[]
  followers User[]   @relation("FollowerRelation", references: [id])
  following User[]   @relation("FollowerRelation", references: [id])
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt

}

model Photo {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  hashtags  Hashtag[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  hashtag   String   @unique
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Like {
  id        Int      @id @default(autoincrement())
  photo     Photo    @relation(fields: [photoId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  photoId   Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([photoId, userId])
}


model CoffeeShop {
  id Int @id @default(autoincrement())
  name String 
  latitude String
  longitude String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  photos String
  categories Category[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  @@unique([name, latitude, longitude])
}

// model CoffeeShopPhoto{
//   id     Int  @id @default(autoincrement())
//   url    String
//   shop   CoffeeShop @relation(fields: [shopId], references: [id], onDelete: Cascade)
//   shopId Int
//   createAt DateTime @default(now())
//   updateAt DateTime @updatedAt
// }

model Category{
  id     Int  @id @default(autoincrement())
  name    String @unique
  slug    String?
  shops  CoffeeShop[]
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}